continue
params
continue
params
Administrator.create(administrator_params)
@user.create(administrator_params)
@user.info
@user
continue
@user.errors
@user.update(adm_params)
continue
params
@user.errors
@user.update(adm_params)
continue
@user.errors
@user.update(adm_params)
continue
params
@user.update(adm_params)
continue
params
continue
params
continue
params.permit(administrator: [:organisation,:organisation_address],info: [:name,:last_name,:mail,:phone,:password,:password_confirmation])
params.permit(administrator: [:organisation,:organisation_address])
params
continue
@user.update(administrator_params)
continue
params[:id]
session[:type_id]
session[:type_id] == params[:id]
session[:user_type] == 'administrator' 
quit
session[:user_type] == 'administrator'
 session[:user_type] == 'administrator' && session[:type_id] == params[:id]
continue
params[:id]
session[:type_id]
session[:user_type]
continue
logged_in?
@user
session
continue
@user
@user.save
continue
@user.errors
@user.save
continue
@user.errors
@user.save
continue
@user.errors
@user_info
@user.save
@user_info
continue
@user.errors.full_messages
@user.errors
@user.save
@user_info.errors
@user.errors
continue
@user_info.errors
@user.errors.full_messages
@user.errors.count
@user.errors
@user.save
@user.errors
continue
params.require(:result_of_test).permit(question_results_attributes: [:was_checked,:id])
params.require(:result_of_test).permit(question_results_attributes: {})
params.require(:result_of_test).permit(question_results_attributes: {:1})
params.require(:result_of_test).permit(question_results_attributes: {1})
params.require(:result_of_test).permit(question_results_attributes: {1:{}})
params.require(:result_of_test).permit(question_results_attributes: {1:[:was_checked,:id]})
params.require(:result_of_test).permit(question_results_attributes: {1:{:was_checked,:id}})
params.require(:result_of_test).permit(question_results_attributes: {})
params.require(:result_of_test).permit(question_results_attributes: [])
params.require(:result_of_test).permit(:question_results_attributes)
params
params.require(:result_of_test)
continue
params
quit
related_i[interest]
next
related[interest]
next
r.was_checked
interests
next
r.was_checked
interests
interest
next
quit
continue
interests
next
r.was_checked
next
r.was_checked
interests
next
r.was_checked
i
quit
continue
next
timestamps
r
next
quit
next
continue
next
continue
quit
next
continue
next
continue
next
total_q
next
continue
params[:value]
next
continue
next
session[:progress]
session[:value]
next
continue
next
@description
next
step.to_i
continue
step
next
next_q
continue
next
res
next
continue
step
next
test
next
continue
step
next
session[:result_of_test_id]
next
continue
@user_info
next
continue
next
continue
QuestionResult.order(:number).where(result_of_test_id: 2)
QuestionResult.order(:number).where(result_of_test_id: self.id)
ResultOfTest.all
res
question
next
session[:result_of_test_id]
session[:cur_question]
session
continue
next
session[:cur_question]
next
continue
next
continue
next
Question.all.count
next
continue
next
continue
next
pic
next
next_q
next
QuestionResult.all
next
cur_question
next
res
next
continue
next
question
next
res
continue
next
continue
res.valid?
res
continue
next
continue
res.save
res.errors.count
res.save
res.errors.count
res.errors
res.valid?
res
next
continue
next
ResultOfTest.all.count
continue
next
continue
Administrator.find_by(info_id: session[:user_id])
session[:user_id]
session
adm
next
adm
next
user
continue
user.class.name
user.class.human_name
user.name.humanize
user.name,humanize
user.human_name
continue
session[:user_type]
session[:type]
student_update_params
continue
params[:student]
continue
next
@user
next
@user.info
@user
@uesr
next
