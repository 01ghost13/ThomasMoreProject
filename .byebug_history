continue
params.require(:result_of_test).permit(question_results_attributes: [:was_checked,:id])
params.require(:result_of_test).permit(question_results_attributes: {})
params.require(:result_of_test).permit(question_results_attributes: {:1})
params.require(:result_of_test).permit(question_results_attributes: {1})
params.require(:result_of_test).permit(question_results_attributes: {1:{}})
params.require(:result_of_test).permit(question_results_attributes: {1:[:was_checked,:id]})
params.require(:result_of_test).permit(question_results_attributes: {1:{:was_checked,:id}})
params.require(:result_of_test).permit(question_results_attributes: {})
params.require(:result_of_test).permit(question_results_attributes: [])
params.require(:result_of_test).permit(:question_results_attributes)
params
params.require(:result_of_test)
continue
params
quit
related_i[interest]
next
related[interest]
next
r.was_checked
interests
next
r.was_checked
interests
interest
next
quit
continue
interests
next
r.was_checked
next
r.was_checked
interests
next
r.was_checked
i
quit
continue
next
timestamps
r
next
quit
next
continue
next
continue
quit
next
continue
next
continue
next
total_q
next
continue
params[:value]
next
continue
next
session[:progress]
session[:value]
next
continue
next
@description
next
step.to_i
continue
step
next
next_q
continue
next
res
next
continue
step
next
test
next
continue
step
next
session[:result_of_test_id]
next
continue
@user_info
next
continue
next
continue
QuestionResult.order(:number).where(result_of_test_id: 2)
QuestionResult.order(:number).where(result_of_test_id: self.id)
ResultOfTest.all
res
question
next
session[:result_of_test_id]
session[:cur_question]
session
continue
next
session[:cur_question]
next
continue
next
continue
next
Question.all.count
next
continue
next
continue
next
pic
next
next_q
next
QuestionResult.all
next
cur_question
next
res
next
continue
next
question
next
res
continue
next
continue
res.valid?
res
continue
next
continue
res.save
res.errors.count
res.save
res.errors.count
res.errors
res.valid?
res
next
continue
next
ResultOfTest.all.count
continue
next
continue
Administrator.find_by(info_id: session[:user_id])
session[:user_id]
session
adm
next
adm
next
user
continue
user.class.name
user.class.human_name
user.name.humanize
user.name,humanize
user.human_name
continue
session[:user_type]
session[:type]
student_update_params
continue
params[:student]
continue
next
@user
next
@user.info
@user
@uesr
next
@user_info
Info.all
Info.find_by(id: 6).delete
Info.find_by(id: 6)
Info.find(id: 6)
Info.all
info_params
next
continue
next
continue
@user
continue
next
continue
next
@user.errors
next
@user
continue
next
continue
@user.errors
@user.valid?
@user
@user.info_attributes
continue
@user.info_attributes
@user.errors
@user.valid?
@user
continue
params.require(:tutor).permit(:administrator_id).require(:info_attributes).permit(:name)
params.require(:tutor).permit({:administrator_id, :info_attributes=>{:name,:last_name}})
params.require(:tutor).permit(:administrator_id, :info_attributes=>{:name,:last_name})
params.require(:tutor).permit(:administrator_id, :info_attributes)
params.require(:tutor).permit(:administrator_id, info_attributes)
tutor_params
params[:tutor]
some = Tutor.new(params[:tutor])
some
some.info_attributes
some.info_attributes = info_params
some = Tutor.new(tutor_params)
Tutor.new(tutor_params).info_attributes = info_params
@user
continue
params.require(:tutor).require(:info_attributes)
params.require(:tutor).permit(:administrator_id,:info_attributes)
params.require :tutor
continue
info_params
@user
continue
params[:tutor]
params.permit(:administrator_id)
params.require(:tutor)
params.require([:tutor,:info])
{tutor: tutor_params, info: info_params}
params
{tutor: tutor_params, info: info_params}
params.require(:info)
params.require(:tutor)
params.require(:tutor,:info)
params
continue
params[:tutor]
session[:tutor]
params
info_params
tutor_params
continue
next
continue
